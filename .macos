# ~/.macos https://github.com/kentcdodds/dotfiles/blob/main/.macos
# Modified by Diogo Cardoso 
# Run without downloading:
# curl https://raw.githubusercontent.com/cardosod-ppb/dotfiles/HEAD/.macos | bash

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `.macos` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

echo "Hello $(whoami)! Let's get you set up."

echo "create projects folder"
mkdir -p ${HOME}/Projects

echo "installing homebrew"
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

echo "installing terminal stuff"
brew install \
7-zip \
asdf \
bat \
coreutils \
git-delta \
fzf \
gh \
git \
imagemagick \
mas \
ncdu \
parallel \
ripgrep \
switchaudio-osx \
thefuck \
tree \
you-get \
zsh

echo "installing apps"
brew install --cask \
android-file-transfer \
android-studio \
alfred \
balenaetcher \
bruno \
cyberduck \
docker \
firefox \
gimp \
google-chrome \
iterm2 \
maccy \
mysqlworkbench \
notion \
pure \
qlcolorcode \
qlmarkdown \
qlstephen \
quicklook-json \
rectangle \
slack \
spotify \
visual-studio-code \
vlc \
watchman \
zoom \
zulu@17

echo "installing xcode"
mas install 497799835

echo "installing vscode extensions"
code --install-extension \
bierner.markdown-mermaid \
dbaeumer.vscode-eslint \
editorconfig.editorc \
eamodio.gitlens \
esbenp.prettier-vscode \
vscodevim.vim \
yoavbls.pretty-ts-errors

echo "setting zsh as default shell"
chsh -s /usr/local/bin/zsh

echo "installing oh my zsh"
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

echo "installing oh my zsh plugins"
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting

echo "installing fzf"
$(brew --prefix)/opt/fzf/install --completion --key-bindings --update-rc

echo "installing parallel"
yes 'will cite' | parallel --citation

echo "installing asdf"
echo -e "\n. $(brew --prefix asdf)/libexec/asdf.sh" >> ${ZDOTDIR:-~}/.zshrc
asdf plugin add nodejs python ruby
echo "legacy_version_file = yes" >> $HOME/.asdfrc #  # support other version manager files (.nvmrc, .ruby-version, etc.)

echo "installing yarn"
corepack enable

echo "generating a new ssh key for github"
ssh-keygen -t ed25519 -C "diogo.cardoso@flutteruki.com" -N "" -f ~/.ssh/github_id_ed25519
eval "$(ssh-agent -s)"
touch ~/.ssh/config
echo "Host github.com\n AddKeysToAgent yes\n IdentityFile ~/.ssh/github_id_ed25519" | tee ~/.ssh/config
ssh-add --apple-use-keychain ~/.ssh/github_id_ed25519

echo "adding public key to github"
gh ssh-key add ~/.ssh/github_id_ed25519.pub --title $(hostname)

echo "cloning dotfiles"
git clone git@github.com:cardosod-ppb/dotfiles.git "${HOME}/Projects/dotfiles"
ln -s "${HOME}/Projects/dotfiles/.zshrc" "${HOME}/.zshrc"
ln -s "${HOME}/Projects/dotfiles/.gitignore_global" "${HOME}/.gitignore_global"
ln -s "${HOME}/Projects/dotfiles/.gitconfig" "${HOME}/.gitconfig"
ln -s "${HOME}/Projects/dotfiles/Library/Application\ Support/Code/User/settings.json" "${HOME}/Library/Application\ Support/Code/User/settings.json"