# ~/.macos https://github.com/kentcdodds/dotfiles/blob/main/.macos
# Modified by Diogo Cardoso 
# Run without downloading:
# curl https://raw.githubusercontent.com/dpcardoso/dotfiles/HEAD/.macos | bash

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `.macos` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

echo "Hello $(whoami)! Let's get you set up."

echo "create projects folder"
mkdir -p ${HOME}/Projects/{personal,work}

echo "installing homebrew"
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

echo "installing terminal stuff"
brew install \
7-zip \
bat \
coreutils \
git-delta \
fnm \
fzf \
gh \
git \
imagemagick \
ncdu \
neovim \
parallel \
pyenv \
rbenv \
ripgrep \
ruby-build \
switchaudio-osx \
thefuck \
tmux \
tree \
you-get \
zsh

echo "installing apps"
brew install --cask \
android-file-transfer \
alfred \
balenaetcher \
cyberduck \
docker \
firefox \
gimp \
google-chrome \
iterm2 \
maccy \
mysqlworkbench \
notion \
pure \
qlcolorcode \
qlmarkdown \
qlstephen \
quicklook-json \
rectangle \
slack \
spotify \
visual-studio-code \
vlc \
zoom

echo "installing vscode extensions"
code --install-extension \
bierner.markdown-mermaid \
dbaeumer.vscode-eslint \
editorconfig.editorc \
eamodio.gitlens \
esbenp.prettier-vscode \
vscodevim.vim

echo "setting zsh as default shell"
chsh -s /usr/local/bin/zsh

echo "installing oh my zsh"
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

echo "installing oh my zsh plugins"
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting

echo "installing fzf"
$(brew --prefix)/opt/fzf/install --completion --key-bindings --update-rc

echo "installing parallel"
yes 'will cite' | parallel --citation

echo "installing tmux plugins"
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
${HOME}/.tmux/plugins/tpm/bin/install_plugins

echo "installing yarn"
curl -o- -L https://yarnpkg.com/install.sh | bash # installation via homebrew doesn't allow to install yarn without node

echo "generating a new ssh key for github"
mkdir -p ${HOME}/.ssh/{personal,work}
ssh-keygen -t ed25519 -C "diogo.cardoso@outlook.com" -N "" -f ~/.ssh/personal/github_id_ed25519
eval "$(ssh-agent -s)"
touch ~/.ssh/config
echo "Host *\n AddKeysToAgent yes\n IdentityFile ~/.ssh/personal/github_id_ed25519" | tee ~/.ssh/config
ssh-add --apple-use-keychain ~/.ssh/personal/github_id_ed25519

echo "adding public key to github"
gh ssh-key add ~/.ssh/personal/github_id_ed25519.pub --title $(hostname)

echo "cloning dotfiles"
git clone https://github.com/dpcardoso/dotfiles.git "${HOME}/Projects/personal/dotfiles"
ln -s "${HOME}/Projects/personal/dotfiles/.zshrc" "${HOME}/.zshrc"
ln -s "${HOME}/Projects/personal/dotfiles/.gitignore_global" "${HOME}/.gitignore_global"
ln -s "${HOME}/Projects/personal/dotfiles/.gitconfig" "${HOME}/.gitconfig"
ln -s "${HOME}/Projects/personal/dotfiles/.gitconfig_personal" "${HOME}/.gitconfig_personal"
ln -s "${HOME}/Projects/personal/dotfiles/.gitconfig_work" "${HOME}/.gitconfig_work"
ln -s "${HOME}/Projects/personal/dotfiles/.config/nvim/init.vim" "${HOME}/.config/nvim/init.vim"
ln -s "${HOME}/Projects/personal/dotfiles/.npmrcs/default" "${HOME}/.npmrcs/default"
ln -s "${HOME}/Projects/personal/dotfiles/.npmrcs/work" "${HOME}/.npmrcs/work"
ln -s "${HOME}/Projects/personal/dotfiles/.tmux.conf" "${HOME}/.tmux.conf"
ln -s "${HOME}/Projects/personal/dotfiles/Library/Application\ Support/Code/User/settings.json" "${HOME}/Library/Application\ Support/Code/User/settings.json"

printf "TODO:\n\
configure: \n\
  GitHub SSH Key (pbcopy < ~/.ssh/personal/github_id_ed25519.pub) \n\
  Git (work email) \n\
  NPM (work npmrc) \n\
install: \n\
  Vimac (https://install.appcenter.ms/users/dexterleng/apps/vimac/distribution_groups/sparkle) \n\
\n\
"
